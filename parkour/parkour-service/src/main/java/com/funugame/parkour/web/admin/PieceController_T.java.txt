package com.funugame.parkour.web.admin;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.funugame.parkour.api.ISyncService;
import com.funugame.parkour.api.IUserService;
import com.funugame.parkour.api.daoentity.UserPiece;

@Controller
@RequestMapping(value = "/piece")
@Lazy
public class PieceController_T {
    @Autowired
    private IUserService userService;
    @Autowired
    private ISyncService syncService;

    @RequestMapping(value = "/list", method = RequestMethod.GET)
    public String list(Model model) {
	model.addAttribute(new UserPiece());
	return "pieces/select";
    }

    @RequestMapping(value = "/list", method = RequestMethod.POST)
    public String list2(@Validated UserPiece userpiece, BindingResult br, Model model) {
	List list = new ArrayList();
	try {
	    list = userService.selectPieceList(userpiece.getUid(),userpiece.getId());
	} catch (Exception e) {
	    e.printStackTrace();
	}
	model.addAttribute("list", list);
	return "pieces/list";
    }

    @RequestMapping(value = "/add", method = RequestMethod.GET)
    public String add(Model model) {
	model.addAttribute(new UserPiece());
	return "pieces/add";
    }

    @RequestMapping(value = "/add", method = RequestMethod.POST)
    public String add(@Validated UserPiece userpiece, BindingResult br, Model model) {
	try {
	    userpiece.setMark("insert");
	    List ls = new ArrayList();
	    ls.add(userpiece);
	    Integer uid=userpiece.getUid();
	    syncService.syncPiece(uid,ls);
	} catch (Exception e) {
	    e.printStackTrace();
	}
	List list = new ArrayList();
	try {
	    list = userService.selectPieceList(userpiece.getUid(),userpiece.getId());
	} catch (Exception e) {
	    e.printStackTrace();
	}
	model.addAttribute("list", list);
	model.addAttribute(userpiece);
	return "pieces/list";
    }

    @RequestMapping(value = "{uid},{id}/update", method = RequestMethod.GET)
    public String update(@PathVariable int uid, @PathVariable int id, @Validated UserPiece userpiece, Model model) {
	List list = new ArrayList();
	try {
	    list = userService.selectPieceList(uid,id);
	} catch (Exception e) {
	    e.printStackTrace();
	}
	userpiece = (UserPiece) list.get(0);
	model.addAttribute(userpiece);
	return "pieces/update";
    }

    @RequestMapping(value = "{uid},{id}/update", method = RequestMethod.POST)
    public String update2(@PathVariable int uid, @PathVariable int id, @Validated UserPiece userpiece, BindingResult br, Model model) {
	try {
	    userpiece.setMark("update");
	    List ls = new ArrayList();
	    ls.add(userpiece);
	    uid=userpiece.getUid();
	    syncService.syncPiece(uid,ls);
	    model.addAttribute("list", ls);
	} catch (Exception e) {
	    e.printStackTrace();
	}
	return "redirect:/piece/list";
    }

    @RequestMapping(value = "/{uid},{id}/delete", method = RequestMethod.GET)
    public String delete(@PathVariable int uid, @PathVariable int id) {
	UserPiece userpiece = new UserPiece();
	userpiece.setMark("delete");
	userpiece.setUid(uid);
	userpiece.setId(id);
	List list = new ArrayList();
	try {
	    list.add(userpiece);
	    uid=userpiece.getUid();
	    syncService.syncPiece(uid,list);
	} catch (Exception e) {
	    e.printStackTrace();
	}
	return "redirect:/piece/list";
    }
}
