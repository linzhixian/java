package com.funugame.parkour.web.admin;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.funugame.parkour.api.ISyncService;
import com.funugame.parkour.api.IUserService;
import com.funugame.parkour.api.daoentity.UserPet;
import com.funugame.parkour.api.daoentity.UserTech;

@Controller
@RequestMapping(value = "/tech")
@Lazy
public class TechController_T {
    @Autowired
    private IUserService userService;
    @Autowired
    private ISyncService syncService;

    @RequestMapping(value = "/list", method = RequestMethod.GET)
    public String list(Model model) {
	model.addAttribute(new UserTech());
	return "techs/select";
    }

    @RequestMapping(value = "/list", method = RequestMethod.POST)
    public String list2(@Validated UserTech usertech, BindingResult br, Model model) {
	List list = new ArrayList();
	try {
	    list = userService.selectTechList(usertech);
	} catch (Exception e) {
	    e.printStackTrace();
	}
	model.addAttribute("list", list);
	return "techs/list";
    }

    @RequestMapping(value = "/add", method = RequestMethod.GET)
    public String add(Model model) {
	model.addAttribute(new UserTech());
	return "techs/add";
    }

    @RequestMapping(value = "/add", method = RequestMethod.POST)
    public String add(@Validated UserTech usertech, BindingResult br, Model model) {
	try {
	    usertech.setMark("insert");
	    List ls = new ArrayList();
	    ls.add(usertech);
	    Integer uid=usertech.getUid();
	    syncService.syncTech(uid,ls);
	} catch (Exception e) {
	    e.printStackTrace();
	}
	List list = new ArrayList();
	try {
	    list = userService.selectTechList(usertech);
	} catch (Exception e) {
	    e.printStackTrace();
	}
	model.addAttribute("list", list);
	model.addAttribute(usertech);
	return "techs/list";
    }

    @RequestMapping(value = "{uid},{id}/update", method = RequestMethod.GET)
    public String update(@PathVariable int uid, @PathVariable int id, @Validated UserTech usertech, Model model) {
	usertech.setUid(uid);
	usertech.setId(id);
	List list = new ArrayList();
	try {
	    list = userService.selectTechList(usertech);
	} catch (Exception e) {
	    e.printStackTrace();
	}
	usertech = (UserTech) list.get(0);
	model.addAttribute(usertech);
	return "techs/update";
    }

    @RequestMapping(value = "{uid},{id}/update", method = RequestMethod.POST)
    public String update2(@PathVariable int uid, @PathVariable int id, @Validated UserTech usertech, BindingResult br, Model model) {
	try {
	    usertech.setMark("update");
	    List ls = new ArrayList();
	    ls.add(usertech);
	    uid=usertech.getUid();
	    syncService.syncTech(uid,ls);
	    model.addAttribute("list", ls);
	} catch (Exception e) {
	    e.printStackTrace();
	}
	return "redirect:/tech/list";
    }

    @RequestMapping(value = "/{uid},{id}/delete", method = RequestMethod.GET)
    public String delete(@PathVariable int uid, @PathVariable int id) {
	UserTech usertech = new UserTech();
	usertech.setMark("delete");
	usertech.setUid(uid);
	usertech.setId(id);
	List list = new ArrayList();
	try {
	    list.add(usertech);
	    uid=usertech.getUid();
	    syncService.syncTech(uid,list);
	} catch (Exception e) {
	    e.printStackTrace();
	}
	return "redirect:/tech/list";
    }
}
