package org.parkour.service;

import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;

import org.springframework.beans.factory.FactoryBean;

public class Test2<T> implements FactoryBean<T> {
    Class<T> entityClass = null;
    public Test2() {
	Type t = getClass().getGenericSuperclass();
	if (t instanceof ParameterizedType) {
	    Type[] p = ((ParameterizedType) t).getActualTypeArguments();
	    entityClass = (Class<T>) p[0];
	}
    }
    
    @Override
    public T getObject() throws Exception {

	return null;
    }

    public Class<T> getTClass() {
	return entityClass;
    }

    @Override
    public Class<?> getObjectType() {
	// TODO Auto-generated method stub
	return null;
    }

    @Override
    public boolean isSingleton() {
	// TODO Auto-generated method stub
	return false;
    }
    public static void main(String[] args) {
	
	Test2<Test> tt=new Test2<Test>();
	System.out.println(tt.getTClass());
    }
}
