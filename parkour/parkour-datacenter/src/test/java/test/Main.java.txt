package test;

import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class Main {

    public static void main2(String[] args) throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {
	Parent parent = new Parent();
	parent.setA(new A());
	parent.setB(new B());
	Process process = new Process();
	Method[] methods = parent.getClass().getDeclaredMethods();

	for (Method m : methods) {
	    if (m.getName().startsWith("get")) {
		Object obj = m.invoke(parent);
		System.out.println(obj.getClass().getCanonicalName());
		if (obj != null) {
		    System.out.println(obj);
		    process.process(obj);
		}
	    }

	}
    }
    public static void main(String[] args) {
	String name="getAbc";
	System.out.println(toLowerCaseFirstOne(name.substring(3)));
    }
    public static String toLowerCaseFirstOne(String s)
    {
        if(Character.isLowerCase(s.charAt(0)))
            return s;
        else
            return (new StringBuilder()).append(Character.toLowerCase(s.charAt(0))).append(s.substring(1)).toString();
    }

}
