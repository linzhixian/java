package com.funugame.shooting.datacenter.loggermain;

import org.aspectj.lang.JoinPoint;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.lzx.framework.utils.StringUtil;

public class LogAspect {
    protected static Logger logger = LoggerFactory.getLogger(LogAspect.class);
    String strLog = null;

    public void afterReturning(JoinPoint jp, Object retVal) {
	if (logger.isDebugEnabled()) {
	    String paramStr = paramsToString(jp);
	    strLog = "Call method: " + jp.getTarget().getClass().getName() + "." + jp.getSignature().getName() + "(" + paramStr + "),Return:"
		    + StringUtil.objectToString(retVal);
	    logger.info(strLog);// 一般信息
	}
    }

    public void afterThrowing(JoinPoint jp, Exception ex) {
	if (logger.isDebugEnabled()) {
	    String paramStr = paramsToString(jp);
	    strLog = "Call method: " + jp.getTarget().getClass().getName() + "." + jp.getSignature().getName() + "(" + paramStr + "),Exception:" + ex.getMessage();
	    logger.info(strLog);// 一般信息
	}

    }

    private String paramsToString(JoinPoint jp) {
	Object[] params = jp.getArgs();
	String paramStr = "";
	for (Object p : params) {
	    paramStr = paramStr + StringUtil.objectToString(p) + ",";
	}
	if (paramStr.endsWith(","))
	    paramStr = paramStr.substring(0, paramStr.length() - 1);
	return paramStr;
    }
}
